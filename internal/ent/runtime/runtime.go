// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"time"

	"github.com/PicoTools/pico/internal/ent/ant"
	"github.com/PicoTools/pico/internal/ent/blobber"
	"github.com/PicoTools/pico/internal/ent/chat"
	"github.com/PicoTools/pico/internal/ent/command"
	"github.com/PicoTools/pico/internal/ent/credential"
	"github.com/PicoTools/pico/internal/ent/listener"
	"github.com/PicoTools/pico/internal/ent/message"
	"github.com/PicoTools/pico/internal/ent/operator"
	"github.com/PicoTools/pico/internal/ent/pki"
	"github.com/PicoTools/pico/internal/ent/schema"
	"github.com/PicoTools/pico/internal/ent/task"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	antMixin := schema.Ant{}.Mixin()
	antMixinHooks0 := antMixin[0].Hooks()
	ant.Hooks[0] = antMixinHooks0[0]
	antMixinInters0 := antMixin[0].Interceptors()
	ant.Interceptors[0] = antMixinInters0[0]
	antMixinFields0 := antMixin[0].Fields()
	_ = antMixinFields0
	antFields := schema.Ant{}.Fields()
	_ = antFields
	// antDescCreatedAt is the schema descriptor for created_at field.
	antDescCreatedAt := antMixinFields0[0].Descriptor()
	// ant.DefaultCreatedAt holds the default value on creation for the created_at field.
	ant.DefaultCreatedAt = antDescCreatedAt.Default.(func() time.Time)
	// antDescUpdatedAt is the schema descriptor for updated_at field.
	antDescUpdatedAt := antMixinFields0[1].Descriptor()
	// ant.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	ant.DefaultUpdatedAt = antDescUpdatedAt.Default.(func() time.Time)
	// ant.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	ant.UpdateDefaultUpdatedAt = antDescUpdatedAt.UpdateDefault.(func() time.Time)
	// antDescExtIP is the schema descriptor for ext_ip field.
	antDescExtIP := antFields[2].Descriptor()
	// ant.ExtIPValidator is a validator for the "ext_ip" field. It is called by the builders before save.
	ant.ExtIPValidator = antDescExtIP.Validators[0].(func(string) error)
	// antDescIntIP is the schema descriptor for int_ip field.
	antDescIntIP := antFields[3].Descriptor()
	// ant.IntIPValidator is a validator for the "int_ip" field. It is called by the builders before save.
	ant.IntIPValidator = antDescIntIP.Validators[0].(func(string) error)
	// antDescOsMeta is the schema descriptor for os_meta field.
	antDescOsMeta := antFields[5].Descriptor()
	// ant.OsMetaValidator is a validator for the "os_meta" field. It is called by the builders before save.
	ant.OsMetaValidator = antDescOsMeta.Validators[0].(func(string) error)
	// antDescHostname is the schema descriptor for hostname field.
	antDescHostname := antFields[6].Descriptor()
	// ant.HostnameValidator is a validator for the "hostname" field. It is called by the builders before save.
	ant.HostnameValidator = antDescHostname.Validators[0].(func(string) error)
	// antDescUsername is the schema descriptor for username field.
	antDescUsername := antFields[7].Descriptor()
	// ant.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	ant.UsernameValidator = antDescUsername.Validators[0].(func(string) error)
	// antDescDomain is the schema descriptor for domain field.
	antDescDomain := antFields[8].Descriptor()
	// ant.DomainValidator is a validator for the "domain" field. It is called by the builders before save.
	ant.DomainValidator = antDescDomain.Validators[0].(func(string) error)
	// antDescProcessName is the schema descriptor for process_name field.
	antDescProcessName := antFields[10].Descriptor()
	// ant.ProcessNameValidator is a validator for the "process_name" field. It is called by the builders before save.
	ant.ProcessNameValidator = antDescProcessName.Validators[0].(func(string) error)
	// antDescFirst is the schema descriptor for first field.
	antDescFirst := antFields[15].Descriptor()
	// ant.DefaultFirst holds the default value on creation for the first field.
	ant.DefaultFirst = antDescFirst.Default.(func() time.Time)
	// antDescLast is the schema descriptor for last field.
	antDescLast := antFields[16].Descriptor()
	// ant.DefaultLast holds the default value on creation for the last field.
	ant.DefaultLast = antDescLast.Default.(func() time.Time)
	// antDescNote is the schema descriptor for note field.
	antDescNote := antFields[18].Descriptor()
	// ant.NoteValidator is a validator for the "note" field. It is called by the builders before save.
	ant.NoteValidator = antDescNote.Validators[0].(func(string) error)
	// antDescColor is the schema descriptor for color field.
	antDescColor := antFields[19].Descriptor()
	// ant.DefaultColor holds the default value on creation for the color field.
	ant.DefaultColor = antDescColor.Default.(uint32)
	blobberMixin := schema.Blobber{}.Mixin()
	blobberMixinHooks0 := blobberMixin[0].Hooks()
	blobber.Hooks[0] = blobberMixinHooks0[0]
	blobberMixinInters0 := blobberMixin[0].Interceptors()
	blobber.Interceptors[0] = blobberMixinInters0[0]
	blobberMixinFields0 := blobberMixin[0].Fields()
	_ = blobberMixinFields0
	blobberFields := schema.Blobber{}.Fields()
	_ = blobberFields
	// blobberDescCreatedAt is the schema descriptor for created_at field.
	blobberDescCreatedAt := blobberMixinFields0[0].Descriptor()
	// blobber.DefaultCreatedAt holds the default value on creation for the created_at field.
	blobber.DefaultCreatedAt = blobberDescCreatedAt.Default.(func() time.Time)
	// blobberDescUpdatedAt is the schema descriptor for updated_at field.
	blobberDescUpdatedAt := blobberMixinFields0[1].Descriptor()
	// blobber.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	blobber.DefaultUpdatedAt = blobberDescUpdatedAt.Default.(func() time.Time)
	// blobber.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	blobber.UpdateDefaultUpdatedAt = blobberDescUpdatedAt.UpdateDefault.(func() time.Time)
	chatFields := schema.Chat{}.Fields()
	_ = chatFields
	// chatDescCreatedAt is the schema descriptor for created_at field.
	chatDescCreatedAt := chatFields[0].Descriptor()
	// chat.DefaultCreatedAt holds the default value on creation for the created_at field.
	chat.DefaultCreatedAt = chatDescCreatedAt.Default.(func() time.Time)
	// chatDescMessage is the schema descriptor for message field.
	chatDescMessage := chatFields[2].Descriptor()
	// chat.MessageValidator is a validator for the "message" field. It is called by the builders before save.
	chat.MessageValidator = func() func(string) error {
		validators := chatDescMessage.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(message string) error {
			for _, fn := range fns {
				if err := fn(message); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// chatDescIsServer is the schema descriptor for is_server field.
	chatDescIsServer := chatFields[3].Descriptor()
	// chat.DefaultIsServer holds the default value on creation for the is_server field.
	chat.DefaultIsServer = chatDescIsServer.Default.(bool)
	commandFields := schema.Command{}.Fields()
	_ = commandFields
	// commandDescCmd is the schema descriptor for cmd field.
	commandDescCmd := commandFields[2].Descriptor()
	// command.CmdValidator is a validator for the "cmd" field. It is called by the builders before save.
	command.CmdValidator = func() func(string) error {
		validators := commandDescCmd.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(cmd string) error {
			for _, fn := range fns {
				if err := fn(cmd); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// commandDescCreatedAt is the schema descriptor for created_at field.
	commandDescCreatedAt := commandFields[5].Descriptor()
	// command.DefaultCreatedAt holds the default value on creation for the created_at field.
	command.DefaultCreatedAt = commandDescCreatedAt.Default.(func() time.Time)
	credentialMixin := schema.Credential{}.Mixin()
	credentialMixinHooks0 := credentialMixin[0].Hooks()
	credential.Hooks[0] = credentialMixinHooks0[0]
	credentialMixinInters0 := credentialMixin[0].Interceptors()
	credential.Interceptors[0] = credentialMixinInters0[0]
	credentialMixinFields0 := credentialMixin[0].Fields()
	_ = credentialMixinFields0
	credentialFields := schema.Credential{}.Fields()
	_ = credentialFields
	// credentialDescCreatedAt is the schema descriptor for created_at field.
	credentialDescCreatedAt := credentialMixinFields0[0].Descriptor()
	// credential.DefaultCreatedAt holds the default value on creation for the created_at field.
	credential.DefaultCreatedAt = credentialDescCreatedAt.Default.(func() time.Time)
	// credentialDescUpdatedAt is the schema descriptor for updated_at field.
	credentialDescUpdatedAt := credentialMixinFields0[1].Descriptor()
	// credential.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	credential.DefaultUpdatedAt = credentialDescUpdatedAt.Default.(func() time.Time)
	// credential.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	credential.UpdateDefaultUpdatedAt = credentialDescUpdatedAt.UpdateDefault.(func() time.Time)
	// credentialDescUsername is the schema descriptor for username field.
	credentialDescUsername := credentialFields[1].Descriptor()
	// credential.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	credential.UsernameValidator = credentialDescUsername.Validators[0].(func(string) error)
	// credentialDescSecret is the schema descriptor for secret field.
	credentialDescSecret := credentialFields[2].Descriptor()
	// credential.SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	credential.SecretValidator = credentialDescSecret.Validators[0].(func(string) error)
	// credentialDescRealm is the schema descriptor for realm field.
	credentialDescRealm := credentialFields[3].Descriptor()
	// credential.RealmValidator is a validator for the "realm" field. It is called by the builders before save.
	credential.RealmValidator = credentialDescRealm.Validators[0].(func(string) error)
	// credentialDescHost is the schema descriptor for host field.
	credentialDescHost := credentialFields[4].Descriptor()
	// credential.HostValidator is a validator for the "host" field. It is called by the builders before save.
	credential.HostValidator = credentialDescHost.Validators[0].(func(string) error)
	// credentialDescNote is the schema descriptor for note field.
	credentialDescNote := credentialFields[5].Descriptor()
	// credential.NoteValidator is a validator for the "note" field. It is called by the builders before save.
	credential.NoteValidator = credentialDescNote.Validators[0].(func(string) error)
	// credentialDescColor is the schema descriptor for color field.
	credentialDescColor := credentialFields[6].Descriptor()
	// credential.DefaultColor holds the default value on creation for the color field.
	credential.DefaultColor = credentialDescColor.Default.(uint32)
	listenerMixin := schema.Listener{}.Mixin()
	listenerMixinHooks0 := listenerMixin[0].Hooks()
	listener.Hooks[0] = listenerMixinHooks0[0]
	listenerMixinInters0 := listenerMixin[0].Interceptors()
	listener.Interceptors[0] = listenerMixinInters0[0]
	listenerMixinFields0 := listenerMixin[0].Fields()
	_ = listenerMixinFields0
	listenerFields := schema.Listener{}.Fields()
	_ = listenerFields
	// listenerDescCreatedAt is the schema descriptor for created_at field.
	listenerDescCreatedAt := listenerMixinFields0[0].Descriptor()
	// listener.DefaultCreatedAt holds the default value on creation for the created_at field.
	listener.DefaultCreatedAt = listenerDescCreatedAt.Default.(func() time.Time)
	// listenerDescUpdatedAt is the schema descriptor for updated_at field.
	listenerDescUpdatedAt := listenerMixinFields0[1].Descriptor()
	// listener.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	listener.DefaultUpdatedAt = listenerDescUpdatedAt.Default.(func() time.Time)
	// listener.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	listener.UpdateDefaultUpdatedAt = listenerDescUpdatedAt.UpdateDefault.(func() time.Time)
	// listenerDescToken is the schema descriptor for token field.
	listenerDescToken := listenerFields[1].Descriptor()
	// listener.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	listener.TokenValidator = func() func(string) error {
		validators := listenerDescToken.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(token string) error {
			for _, fn := range fns {
				if err := fn(token); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// listenerDescName is the schema descriptor for name field.
	listenerDescName := listenerFields[2].Descriptor()
	// listener.NameValidator is a validator for the "name" field. It is called by the builders before save.
	listener.NameValidator = listenerDescName.Validators[0].(func(string) error)
	// listenerDescIP is the schema descriptor for ip field.
	listenerDescIP := listenerFields[3].Descriptor()
	// listener.IPValidator is a validator for the "ip" field. It is called by the builders before save.
	listener.IPValidator = listenerDescIP.Validators[0].(func(string) error)
	// listenerDescPort is the schema descriptor for port field.
	listenerDescPort := listenerFields[4].Descriptor()
	// listener.PortValidator is a validator for the "port" field. It is called by the builders before save.
	listener.PortValidator = listenerDescPort.Validators[0].(func(uint16) error)
	// listenerDescColor is the schema descriptor for color field.
	listenerDescColor := listenerFields[5].Descriptor()
	// listener.DefaultColor holds the default value on creation for the color field.
	listener.DefaultColor = listenerDescColor.Default.(uint32)
	// listenerDescNote is the schema descriptor for note field.
	listenerDescNote := listenerFields[6].Descriptor()
	// listener.NoteValidator is a validator for the "note" field. It is called by the builders before save.
	listener.NoteValidator = listenerDescNote.Validators[0].(func(string) error)
	// listenerDescLast is the schema descriptor for last field.
	listenerDescLast := listenerFields[7].Descriptor()
	// listener.DefaultLast holds the default value on creation for the last field.
	listener.DefaultLast = listenerDescLast.Default.(func() time.Time)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescMessage is the schema descriptor for message field.
	messageDescMessage := messageFields[2].Descriptor()
	// message.MessageValidator is a validator for the "message" field. It is called by the builders before save.
	message.MessageValidator = messageDescMessage.Validators[0].(func(string) error)
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageFields[3].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
	operatorMixin := schema.Operator{}.Mixin()
	operatorMixinHooks0 := operatorMixin[0].Hooks()
	operator.Hooks[0] = operatorMixinHooks0[0]
	operatorMixinInters0 := operatorMixin[0].Interceptors()
	operator.Interceptors[0] = operatorMixinInters0[0]
	operatorMixinFields0 := operatorMixin[0].Fields()
	_ = operatorMixinFields0
	operatorFields := schema.Operator{}.Fields()
	_ = operatorFields
	// operatorDescCreatedAt is the schema descriptor for created_at field.
	operatorDescCreatedAt := operatorMixinFields0[0].Descriptor()
	// operator.DefaultCreatedAt holds the default value on creation for the created_at field.
	operator.DefaultCreatedAt = operatorDescCreatedAt.Default.(func() time.Time)
	// operatorDescUpdatedAt is the schema descriptor for updated_at field.
	operatorDescUpdatedAt := operatorMixinFields0[1].Descriptor()
	// operator.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	operator.DefaultUpdatedAt = operatorDescUpdatedAt.Default.(func() time.Time)
	// operator.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	operator.UpdateDefaultUpdatedAt = operatorDescUpdatedAt.UpdateDefault.(func() time.Time)
	// operatorDescUsername is the schema descriptor for username field.
	operatorDescUsername := operatorFields[1].Descriptor()
	// operator.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	operator.UsernameValidator = operatorDescUsername.Validators[0].(func(string) error)
	// operatorDescToken is the schema descriptor for token field.
	operatorDescToken := operatorFields[2].Descriptor()
	// operator.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	operator.TokenValidator = func() func(string) error {
		validators := operatorDescToken.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(token string) error {
			for _, fn := range fns {
				if err := fn(token); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// operatorDescColor is the schema descriptor for color field.
	operatorDescColor := operatorFields[3].Descriptor()
	// operator.DefaultColor holds the default value on creation for the color field.
	operator.DefaultColor = operatorDescColor.Default.(uint32)
	// operatorDescLast is the schema descriptor for last field.
	operatorDescLast := operatorFields[4].Descriptor()
	// operator.DefaultLast holds the default value on creation for the last field.
	operator.DefaultLast = operatorDescLast.Default.(func() time.Time)
	pkiMixin := schema.Pki{}.Mixin()
	pkiMixinHooks0 := pkiMixin[0].Hooks()
	pki.Hooks[0] = pkiMixinHooks0[0]
	pkiMixinInters0 := pkiMixin[0].Interceptors()
	pki.Interceptors[0] = pkiMixinInters0[0]
	pkiMixinFields0 := pkiMixin[0].Fields()
	_ = pkiMixinFields0
	pkiFields := schema.Pki{}.Fields()
	_ = pkiFields
	// pkiDescCreatedAt is the schema descriptor for created_at field.
	pkiDescCreatedAt := pkiMixinFields0[0].Descriptor()
	// pki.DefaultCreatedAt holds the default value on creation for the created_at field.
	pki.DefaultCreatedAt = pkiDescCreatedAt.Default.(func() time.Time)
	// pkiDescUpdatedAt is the schema descriptor for updated_at field.
	pkiDescUpdatedAt := pkiMixinFields0[1].Descriptor()
	// pki.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	pki.DefaultUpdatedAt = pkiDescUpdatedAt.Default.(func() time.Time)
	// pki.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	pki.UpdateDefaultUpdatedAt = pkiDescUpdatedAt.UpdateDefault.(func() time.Time)
	taskFields := schema.Task{}.Fields()
	_ = taskFields
	// taskDescCreatedAt is the schema descriptor for created_at field.
	taskDescCreatedAt := taskFields[3].Descriptor()
	// task.DefaultCreatedAt holds the default value on creation for the created_at field.
	task.DefaultCreatedAt = taskDescCreatedAt.Default.(func() time.Time)
}

const (
	Version = "v0.14.1"                                         // Version of ent codegen.
	Sum     = "h1:fUERL506Pqr92EPHJqr8EYxbPioflJo6PudkrEA8a/s=" // Sum of ent codegen.
)
